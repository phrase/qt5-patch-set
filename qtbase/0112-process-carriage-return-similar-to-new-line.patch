From d9dd465a5832098ea77f5e3735bdc22297576249 Mon Sep 17 00:00:00 2001
From: Michal Lazo <michal.lazo@memsource.com>
Date: Fri, 10 Jun 2022 10:14:09 +0200
Subject: [PATCH] process carriage return similar to new line TP-39389

---
 src/corelib/serialization/qxmlstream.cpp       |  4 ----
 src/corelib/serialization/qxmlstreamparser_p.h | 13 +------------
 2 files changed, 1 insertion(+), 16 deletions(-)

diff --git a/src/corelib/serialization/qxmlstream.cpp b/src/corelib/serialization/qxmlstream.cpp
index 437fec9f89..292d42a61f 100644
--- a/src/corelib/serialization/qxmlstream.cpp
+++ b/src/corelib/serialization/qxmlstream.cpp
@@ -1259,10 +1259,6 @@ inline int QXmlStreamReaderPrivate::fastScanContentCharList()
             }
             return n;
         } break;
-        case '\r':
-            if ((c = filterCarriageReturn()) == 0)
-                return n;
-            Q_FALLTHROUGH();
         case '\n':
             ++lineNumber;
             lastLineStart = characterOffset + readBufferPos;
diff --git a/src/corelib/serialization/qxmlstreamparser_p.h b/src/corelib/serialization/qxmlstreamparser_p.h
index d568f9d024..3f68bb6534 100644
--- a/src/corelib/serialization/qxmlstreamparser_p.h
+++ b/src/corelib/serialization/qxmlstreamparser_p.h
@@ -176,18 +176,6 @@ bool QXmlStreamReaderPrivate::parse()
             case 0xffff:
                 token = ERROR;
                 break;
-            case '\r':
-                token = SPACE;
-                if (cu == '\r') {
-                    if ((token_char = filterCarriageReturn())) {
-                        ++lineNumber;
-                        lastLineStart = characterOffset + readBufferPos;
-                        break;
-                    }
-                } else {
-                    break;
-                }
-                Q_FALLTHROUGH();
             case ~0U: {
                 token = EOF_SYMBOL;
                 if (!tagsDone && !inParseEntity) {
@@ -199,6 +187,7 @@ bool QXmlStreamReaderPrivate::parse()
                 }
 
             } break;
+            case '\r':
             case '\n':
                 ++lineNumber;
                 lastLineStart = characterOffset + readBufferPos;
-- 
2.26.1.windows.1

