From dfe166ecb0e8b5604eb599476af2aa592823c669 Mon Sep 17 00:00:00 2001
From: "m][sko" <xlazom00@gmail.com>
Date: Mon, 4 Jun 2018 13:15:18 +0200
Subject: [PATCH 1/2] filter more date for completer, properly handle partial
 results (#4)

* 14089 add filtering multiple prefixes (#3)

add filtering multiple prefixes

* filter more date for completer, properly handle partial results
---
 src/widgets/util/qcompleter.cpp | 32 +++++++++++++++++++++++++-------
 1 file changed, 25 insertions(+), 7 deletions(-)

diff --git a/src/widgets/util/qcompleter.cpp b/src/widgets/util/qcompleter.cpp
index a036071..9d9cc5f 100644
--- a/src/widgets/util/qcompleter.cpp
+++ b/src/widgets/util/qcompleter.cpp
@@ -414,7 +414,25 @@ void QCompletionModel::filter(const QStringList& parts)
         d->model->fetchMore(engine->curParent);
 }
 
-//////////////////////////////////////////////////////////////////////////////
+void concatenateMatchData(QMatchData & current, const QMatchData & newData)
+{
+    if (!newData.isValid())
+        return;
+
+    if (!current.isValid()) {
+        current = newData;
+    } else {
+        if (newData.partial) {
+            current.partial = true;
+        }
+        for (int i = 0; i < newData.indices.count(); ++i) {
+            if (current.indices.indexOf(newData.indices[i]) == -1) {
+                current.indices.append(newData.indices[i]);
+            }
+        }
+    }
+}
+
 void QCompletionEngine::filter(const QStringList& parts)
 {
     const QAbstractItemModel *model = c->proxy->sourceModel();
@@ -433,10 +451,8 @@ void QCompletionEngine::filter(const QStringList& parts)
     QModelIndex parent;
     for (int i = 0; i < curParts.size() - 1; i++) {
         QString part = curParts.at(i);
-        int emi = filter(part, parent, -1).exactMatchIndex;
-        if (emi == -1)
-            return;
-        parent = model->index(emi, c->column, parent);
+        QMatchData newData = filter(part, parent, -1);
+        concatenateMatchData(curMatch, newData);
     }
 
     // Note that we set the curParent to a valid parent, even if we have no matches
@@ -444,8 +460,10 @@ void QCompletionEngine::filter(const QStringList& parts)
     curParent = parent;
     if (curParts.constLast().isEmpty())
         curMatch = QMatchData(QIndexMapper(0, model->rowCount(curParent) - 1), -1, false);
-    else
-        curMatch = filter(curParts.constLast(), curParent, 1); // build at least one
+    else {
+        QMatchData newData = filter(curParts.constLast(), curParent, 1); // build at least one
+        concatenateMatchData(curMatch, newData);
+    }
     curRow = curMatch.isValid() ? 0 : -1;
 }
 
-- 
2.9.2.windows.1

